#!/bin/bash

#aws
alias sso='aws sso login' # authenticate to aws with sso 
alias ssop='aws sso login --profile' # authenticate to aws with sso 

#folders
alias cdu="cd $utilsdir"
alias cdp='cd $project_path'
alias cdg='cd ~/git'

#applications
alias r='bash $scriptsdir/run/run.sh'
alias run='bash $scriptsdir/run/run.sh'
alias godotp='bash $scriptsdir/run/run.sh godot -e'
alias chrome='bash $scriptsdir/run/run.sh google-chrome-stable'
alias mygpt='tgpt --provider duckduckgo --model gpt-4o-mini'

#network
alias tn="telnet"

#distrobox
#alias dboxc='distrobox create'
alias dboxc='distrobox create --image docker.io/library/ubuntu:latest --name'
alias dboxs='distrobox stop'
alias dboxr='distrobox rm'
alias dboxl='distrobox list'
alias dboxe='distrobox enter'
alias dev='distrobox enter dev'
alias di="cat /etc/*-release" # distro information

#fetch
alias f=". ~/.aliases; . ~/.variables; . ~/.session_variables"
alias fbash=". ~/.bashrc"
alias falias=". ~/.aliases"
alias fvar=". ~/.variables"
alias fsvar=". ~/.session_variables"

#general
alias k="pkill -9"
alias nf="neofetch"
alias vi="vim"
alias v="vim"
alias vime="$term -e vim"
alias vie="$term -e vim"
alias ve="$term -e vim"
alias c="clear"
alias cdc="cd && clear"
alias e="exit"
alias h="htop"
alias hg="history | grep -i"
alias psg="ps -e | grep -i"
alias pk9="pkill -9"
alias findstr="sudo grep -i -iRn"
alias findfile="sudo find . -iname"
alias osrelease="cat /etc/os-release"
alias maze="command -V"
alias dus="sudo du -sh *"
alias duh="sudo du -hs .[^.]*"
alias dua="sudo du -sch .[!.]* * |sort -h"
alias username="whoami"
alias hostname="echo $HOSTNAME"
alias envg="env | grep -i"
alias miso="bash $scriptsdir/mount_iso.sh"
alias unrarxe='unrar x -e'

#format
alias columnify="bash $scriptsdir/format/columnize.sh"
alias tailify="bash $scriptsdir/format/tailize.sh"
alias lessify="bash $scriptsdir/format/lessize.sh"

#system
alias sysctlc="sudo systemctl cancel"
alias sysctlstart="sudo systemctl start"
alias sysctlstop="sudo systemctl stop"
alias sysctle="sudo systemctl enable"
alias sysctlen="sudo systemctl enable --now"
alias sysctld="sudo systemctl disable"
alias sysctlue="systemctl --user enable"
alias sysctluen="systemctl --user enable --now"
alias sysctlud="systemctl --user disable"
alias sysctlr="sudo systemctl restart"
alias sysctlstat="sudo systemctl status"
alias nmr="sudo systemctl restart NetworkManager"
alias pwr="sudo systemctl --user restart pipewire pipewire-pulse && sudo systemctl --user daemon-reload && systemctl --user status pipewire pipewire-pulse"

#keyboard 
alias ctrlc='xclip -selection c'
alias ctrlv='xclip -selection c -o'
alias setrr="xset r rate 250 50"

#grub
alias grubup="sudo grub-mkconfig -o /boot/grub/grub.cfg"

#nvidia
alias nvxup="sudo nvidia-xconfig"
alias nvrun="__NV_PRIME_RENDER_OFFLOAD=1 __GLX_VENDOR_LIBRARY_NAME=nvidia"
alias nvsmi="nvidia-smi"

#graphic cards
alias currgpu="glxinfo | grep -i -E 'OpenGL vendor|OpenGL renderer'"
alias gpus="bash $scriptsdir/gpu/gpus.sh"
alias gpuq="envycontrol --query"

#edit
alias edgrub="sudo vim /etc/default/grub"
alias edgdm="sudo vim /etc/gdm/custom.conf"
alias edsddm="sudo vim /etc/sddm.conf"
alias edpacman="sudo vim /etc/pacman.conf"
alias eddnf="sudo vim /etc/dnf/dnf.conf"
alias edlogind="sudo vim /etc/systemd/logind.conf"
alias edupower="sudo vim /etc/UPower/UPower.conf"
alias edbash="$edit $bashrc"
alias edalias="$edit $aliases"
alias edvar="$edit $variables"
alias edsvar="$edit $session_variables"
alias edvim="$edit $vimrc"
alias edaws="$edit ~/.aws/config"
alias edssh="$edit ~/.ssh/config"

#setup
alias setup_deck="bash $scriptsdir/setup/deck/setup.sh"

#boot options
alias bootopl="efibootmgr"
alias bootoprm="sudo efibootmgr -Bb" 

#pkg
alias edpkg="$edit $scriptsdir/pkg/pkg.sh"
alias pkg="bash $scriptsdir/pkg/pkg.sh"

#apt
alias aptin="sudo apt install"
alias aptrm="sudo apt remove"
alias aptarm="sudo apt autoremove"
alias aptup="sudo apt update && sudo apt upgrade"

#snap
alias snapin="sudo snap install"
alias snaprm="sudo snap remove"
alias snapup="sudo snap refresh"
alias snapl="snap list"

#flatpak
alias fpin="flatpak install"
alias fprm="flatpak uninstall"
alias fparm="flatpak uninstall --unused"
alias fpsearch="flatpak search"
alias fpr="flatpak run"
alias fpk="flatpak kill"
alias fpup="flatpak update"
alias fpl="flatpak list"
alias fplg="flatpak list | grep -i"
alias fpla="flatpak list --app"
alias fplag="flatpak list --app | grep -i"
alias fpfix="flatpak repair"
alias fpremoteadd="flatpak remote-add --if-not-exists"
alias fpremoterm="flatpak remote-delete"
alias fpremotes="flatpak remotes"

#pacman
alias pcmin="sudo pacman -Syy; sudo pacman -S --needed"
alias pcmrm="sudo pacman -Rns"
alias pcmup="sudo pacman -Syu"
alias pcmupg="sudo pacman -Syuu"
alias pcmarm="sudo pacman -Qdtq | sudo pacman -Rs -"
alias pcmcrm="pacman -Scc"
alias pcml="pacman -Qe"
alias pcmlg="pacman -Qe | grep -i"
alias pcmlq="pacman -Qe | grep -i"
alias pcmq="pacman -Ss"

#yay
alias yayin="yay -Syy; yay -S"
alias yayup="yay -Syu"
alias yayrm="yay -Rns"
alias yayarm="yay -Yc"
alias yaycrm="yay -Scc"
alias yayl="yay -Qe"
alias yaylg="yay -Qe | grep -i"
alias yayq="yay -Ss"

#dnf
alias dnfin="sudo dnf install"
alias dnfrm="sudo dnf remove"
alias dnfup="sudo dnf upgrade --refresh"
alias dnfarm="sudo dnf autoremove"
alias dnfcc="sudo dnf clean packages"
alias dnfl="dnf list installed"
alias dnflg="dnf list installed | grep -i"

#kde neon
alias knin="pkcon install"
alias knup="pkcon update"
alias knrm="pkcon remove"
alias knrpl="pkcon repo-list"
alias knrpe="pkcon repo-enable"
alias knrpe="pkcon repo-disable"

#nix
#alias nixin="nix-env --iA"
#alias nixrm="nix-env --uninstall"
#alias nixq="nix-env -q" # query installed pkgs
#alias nixs="nix-env -qa --available" # search for pkgs in repo

#gcc compilation aliases: debug mode, release mode
alias gccd='gcc -ansi -pedantic-errors -Wall -Wextra -g'
alias gccr='gcc -ansi -pedantic-errors -Wall -Wextra -DNDEBUG -O3'
alias gccd99='gcc -std=c99 -pedantic-errors -Wall -Wextra -g'
alias gccr99='gcc -std=c99 -pedantic-errors -Wall -Wextra -DNDEBUG -O3'

alias gppd='g++ -std=gnu++98 -Weffc++ -pedantic-errors -Wall -Wextra -g'
alias gppr='g++ -std=gnu++98 -Weffc++ -pedantic-errors -Wall -Wextra -DNDEBUG -O3'
alias gppd11='g++ -std=gnu++11 -Weffc++ -pedantic-errors -Wall -Wextra -g'
alias gppr11='g++ -std=gnu++11 -Weffc++ -pedantic-errors -Wall -Wextra -DNDEBUG -O3'

#valgrind
alias vlg='valgrind --leak-check=yes --track-origins=yes'
alias hlg='valgrind --tool=helgrind'

#git
alias gad="git add"
alias gadu="git add -u"
alias gadrm="git reset"
alias gcm="git commit -m"
alias gcma="git commit --amend"
alias gcmrm="git revert --strategy resolve" #commit id
alias gps="git push"
alias gpl="git pull"
alias gfps="git push --set-upstream origin"
alias gst="git status"
alias glg="git log"
alias gcl="git clone"
alias gdff="git diff"
alias gdfft="git difftool"
alias gsshkg="bash $scriptsdir/git/git_ssh_keygen.sh"
alias gqp="bash $scriptsdir/git/git_quick_push.sh"
alias gup="bash $scriptsdir/git/git_update_and_push.sh"
alias gqpm="bash $scriptsdir/git/git_quick_push_msg.sh"
alias gqcpp="bash $scriptsdir/git/git_quick_cherry_pick_push.sh"
alias gbrrmr="git push origin --delete"
alias gbrrml="git branch -D"
alias grurl="git remote set-url origin"
alias gcp="git cherry-pick"
alias gco="git checkout"
alias gcob="git checkout -b"
alias gsth="git stash"
alias gsthl="git stash list"
alias gsthp="git stash pop"
alias gsthd="git stash drop"
alias gft="git fetch"

#learning/projects scripts
alias lab="bash $scriptsdir/code/lab.sh"
alias mkproject="bash $scriptsdir/code/project.sh"

#godot
alias gdf="bash $scriptsdir/godot/format_gdscript.sh"

#mpd
alias msp="mpc searchplay"
alias mpl="mpc playlist"
alias mup="mpc update && mpc ls | mpc add"
alias mcl="mpc clear"
alias mtg="mpc toggle"
alias mm="bash $scriptsdir/mpd/music_manager.sh"

#python
alias pipin="$python_version -m pip install"
alias pipup="$python_version -m pip install -U" #updates package
alias piprm="$python_version -m pip uninstall -y"
alias pipinr="$python_version -m pip install -r requirements.txt"
alias pipupr="$python_version -m pip install -U -r requirements.txt"
alias piprmr="$python_version -m pip uninstall -y -r requirements.txt"
alias pipl="$python_version -m pip list" #lists environment packages
alias piplg="$python_version -m pip list | grep" #lists environment packages
alias pipshow="$python_version -m pip show" #shows specific package
alias pipcfgl="$python_version -m pip config list -vv"
alias pipfreeze="$python_version -m pip freeze > requirements.txt" #add environment needed packages versions to requirements file

#python venv
alias pyvc="$python_version -m venv"
alias pyve=". $scriptsdir/python/pyveact.sh" # activate/enter
alias pyvd="deactivate" # deactivate
alias pyvcssp="$python_version -m venv --system-site-packages" #gives access to system site packages
alias pyvcwp="$python_version -m venv --without-pip"
alias pyvcwpssp="$python_version -m venv --without-pip --system-site-packages"

#kde plasma theme
alias kwinr="kwin_x11 --replace"
alias pshr="killall plasmashell && kstart plasmashell" #restart plasmashell
alias pshstart="kstart plasmashell"
alias pshstop="killall plasmashell"

#vim
alias vimpi="vim -c PlugInstall -c q -c q"

#docker - dkr
alias dkrr="sudo docker run"
alias dkrrd="sudo docker run -d" #run detached (in the background)
alias dkrps="sudo docker ps"
alias dkrpsa="sudo docker ps -a" #show all containers, even paused ones
alias dkrpull="sudo docker pull"
alias dkrimgs="sudo docker images"
alias dkrstart="sudo docker start"
alias dkrstop="sudo docker stop"
alias dkrlogs="sudo docker logs"
alias dkrit="sudo docker exec -it /bin/bash" #gets you into the container's shell session (virtual environment, like python), it stands for interactive terminal
alias dkrnwcr="sudo docker network create"
alias dkrnwl="sudo docker network ls"

#docker compose - dkrcmp
alias dkrcmpup="sudo docker-compose up -f"
alias dkrcmpdown="docker-compose down -f"

#tmux
alias tmuxns="tmux new -s"
alias tmuxls="tmux list-sessions"
alias tmuxas="tmux attach-session -t"

#guardicore centra - gcc
alias ssht="bash $scriptsdir/guardicore/ssh_to_tester.sh"
alias addta="bash $scriptsdir/guardicore/add_tester_annotations.sh"

#apex legends - apexl
alias apexlcacheup="curl -LO --output-dir ~/.local/share/Steam/steamapps/shadercache/1172470/DXVK_state_cache/ https://github.com/bcook254/apex-legends-cache/raw/main/r5apex.dxvk-cache"

#clear cache
alias clc="sync; echo 3 > /proc/sys/vm/drop_caches"
